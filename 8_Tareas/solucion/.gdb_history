b modo_protegido.ciclo
c
q
b modo_protegido.ciclo
c
make clear
q
b modo_protegido
c
kernel reload 
q
b modo_protegido.ciclo
c
q
b modo_protegido
c
q
b start
c
n
c
n
kernel reload
q
b modo_protegido
c
q
b start
c
b kernel.asm:66
c
n
b kernel.asm:81
c
n
info page
info gdb
info gdt
q
b ciclo_cadena 
b modo_protegido.ciclo
c
n
info gdt
info page
q
b modo_protegido.ciclo
ls
c
n
q
b modo_protegido
b clear
clear
clear breakpoints
b modo_protegido.ciclo
c
c
q
b modo_protegido.ciclo
c
q
b modo_protegido
c
q
b start
c
q
b modo_protegido.ciclo
c
q
b modo_protegido
c
n
7n
n
b kernel.asm:142
c
n
info page
n
q
b
q
b modo_protegido.debud
b modo_protegido.debug
c
n
q
b modo_protegido.debug
c
n
print $ax
print /1bx ax
print /1b ax
print /1b $ax
print /b $ax
print /1t $ax
n
info tss
info gdt
q
q
b modo_protegido.d
c
n
info gdt
info tss
q
b modo_protegido.d
c
n
n
info tss
n
info tss
help creg
creg
c3
$c3
info creg
info all-registers 
n
c
kernel reload 
q
b modo_protegido.d
c
n
kernel reload 
q
n
c
q
b modo_protegido.d
c
n
q
q
w
q
n
c
info gdt
q
b kernel.asm:194
r
n
c
info tss
c
info tss
q
r
c
info tss
c
q
c
info tss
info tss
c
1
q
c
c
q
c
q
c
q
c
c
cd ..
q
c
info gdt
info tss
q
c
info tss
q
c
q
c
q
c
q
b _isr32
r
c
info tss
info gdt
n
info tss
n
n
n
n
n
n
n
n
n
n
n
n
n
n
info tss
q
b _isr32
c
display /x $rax
n
n $eax
r
y
kernel reload
info b
c
n
print $rax
n
print $rax
print $ax
print /t $ax
c
c
q
